{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pdfest/front/src/components/EditInvoice.js\",\n    _s = $RefreshSig$();\n\nimport { Font, PDFDownloadLink } from \"@react-pdf/renderer\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeState, edit, remove } from \"../reducers/btnReducer\";\nimport { Link } from \"react-router-dom\";\nimport \"../invoice.css\";\nimport MyDocument from \"./document\";\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport { cleen, editAdd } from \"../reducers/editReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditInvoice(props) {\n  _s();\n\n  const [id, setId] = useState(1);\n  const [data, setData] = useState([]);\n  const [subTotal, setSubTotal] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [clientName, setClientName] = useState(\"\");\n  const [clientPhone, setClientPhone] = useState(\"\"); // set by the server side\n\n  const [invoiceId, setInvoiceId] = useState(1);\n  const [date, setDate] = useState(\"\");\n  const mystate = useSelector(state => {\n    return {\n      editList: state.editList.editList,\n      List: state.List.List\n    };\n  });\n  const {\n    state\n  } = useLocation();\n  const dispach = useDispatch();\n\n  const handelAdd = () => {\n    setId(id + 1);\n    dispach(changeState({\n      id: id,\n      name: \"\",\n      quntity: 0,\n      price: 0,\n      total: 0\n    }));\n  };\n\n  const handelPost = async url => {\n    //Input  Valdation\n    if (!clientName || !clientPhone) return alert(\"please make sure Client Name && Client Phone Not empty\");\n\n    for (let i = 0; i < mystate.editList.length; i++) {\n      if (!mystate.editList[i].name) return alert(`Please fill the product name in row number ${i + 1} `);\n      if (mystate.editList[i].quntity == 0 || isNaN(mystate.editList[i].quntity)) return alert(`Please fill the product quntity in row number ${i + 1} `);\n      if (mystate.editList[i].price == 0 || isNaN(mystate.editList[i].price)) return alert(`Please fill the product price in row number ${i + 1} `);\n    } //Defined obj containes all invoice information to be stored in json file\n\n\n    let obj = {\n      date: date,\n      clintName: clientName,\n      clintPhone: clientPhone,\n      subTotal: subTotal,\n      tax: tax,\n      totalAmount: totalAmount,\n      itemId: mystate.editList\n    }; //Post\n\n    try {\n      const res = await axios.post(\"http://localhost:3003/post\", obj);\n    } catch (err) {\n      console.log(err);\n    } //Open PDF URL in new TAB\n\n\n    window.open(url, \"_blank\");\n  };\n\n  useEffect(() => {\n    dispach(editAdd(mystate.List.itemId));\n    console.log(\"this is my state\" + mystate.List);\n  }, []);\n  useEffect(() => {\n    setTax(subTotal * 15 / 100);\n    let total = subTotal + subTotal * 15 / 100;\n    setTotalAmount(total);\n  }, [subTotal]); // when the user go back or refresh \n\n  useEffect(() => {\n    return () => {\n      dispach(cleen());\n      console.log(\"cleaned up\");\n    };\n  }, []);\n\n  const handelCalculation = () => {\n    let data = 0;\n\n    for (let i = 0; i < mystate.editList.length; i++) {\n      data += mystate.editList[i].total;\n    }\n\n    setSubTotal(data);\n    console.log(\"Sub: \", subTotal, \"Tax:\", tax, \"total\", totalAmount);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(mystate.editList),\n      children: \"clkic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditInvoice, \"Aq4IVnte+FQ3MViwemRhw3AGVns=\", true, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = EditInvoice;\nexport default EditInvoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditInvoice\");","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/front/src/components/EditInvoice.js"],"names":["Font","PDFDownloadLink","React","useEffect","useState","useDispatch","useSelector","changeState","edit","remove","Link","MyDocument","faPlus","faTrash","FontAwesomeIcon","axios","cleen","editAdd","EditInvoice","props","id","setId","data","setData","subTotal","setSubTotal","tax","setTax","totalAmount","setTotalAmount","clientName","setClientName","clientPhone","setClientPhone","invoiceId","setInvoiceId","date","setDate","mystate","state","editList","List","useLocation","dispach","handelAdd","name","quntity","price","total","handelPost","url","alert","i","length","isNaN","obj","clintName","clintPhone","itemId","res","post","err","console","log","window","open","handelCalculation"],"mappings":"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","sourcesContent":["import { Font, PDFDownloadLink } from \"@react-pdf/renderer\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeState, edit, remove } from \"../reducers/btnReducer\";\nimport {  Link } from \"react-router-dom\";\n\nimport \"../invoice.css\";\nimport MyDocument from \"./document\";\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport { cleen, editAdd } from \"../reducers/editReducer\";\n\nfunction EditInvoice(props) {\n  const [id, setId] = useState(1);\n  const [data, setData] = useState([]);\n  const [subTotal, setSubTotal] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [clientName, setClientName] = useState(\"\");\n  const [clientPhone, setClientPhone] = useState(\"\");\n  // set by the server side\n  const [invoiceId, setInvoiceId] = useState(1);\n  const [date, setDate] = useState(\"\");\n\n  const mystate = useSelector((state) => {\n    return {\n      editList: state.editList.editList,\n      List: state.List.List,\n    };\n  });\n  const {state} = useLocation()\n\n  const dispach = useDispatch();\n\n  const handelAdd = () => {\n    setId(id + 1);\n    dispach(changeState({ id: id, name: \"\", quntity: 0, price: 0, total: 0 }));\n  };\n  const handelPost = async (url) => {\n    //Input  Valdation\n    if (!clientName || !clientPhone)\n      return alert(\"please make sure Client Name && Client Phone Not empty\");\n    for (let i = 0; i < mystate.editList.length; i++) {\n      if (!mystate.editList[i].name)\n        return alert(`Please fill the product name in row number ${i + 1} `);\n      if (mystate.editList[i].quntity == 0 || isNaN(mystate.editList[i].quntity))\n        return alert(`Please fill the product quntity in row number ${i + 1} `);\n      if (mystate.editList[i].price == 0 || isNaN(mystate.editList[i].price))\n        return alert(`Please fill the product price in row number ${i + 1} `);\n    }\n\n    //Defined obj containes all invoice information to be stored in json file\n    let obj = {\n      date: date,\n      clintName: clientName,\n      clintPhone: clientPhone,\n      subTotal: subTotal,\n      tax: tax,\n      totalAmount: totalAmount,\n      itemId: mystate.editList,\n    };\n\n\n\n    //Post\n    try {\n      const res = await axios.post(\"http://localhost:3003/post\", obj);\n    } catch (err) {\n      console.log(err);\n    }\n    //Open PDF URL in new TAB\n    window.open(url, \"_blank\");\n  };\n\n  useEffect( () => {\n    dispach(editAdd(mystate.List.itemId));\n    console.log(\"this is my state\"+mystate.List)\n  }, []);\n\n  useEffect(() => {\n    setTax((subTotal * 15) / 100);\n    let total = subTotal + (subTotal * 15) / 100;\n    setTotalAmount(total);\n  }, [subTotal]);\n\n// when the user go back or refresh \n  useEffect(() => {\n    return () => {\n        dispach(cleen())\n      console.log(\"cleaned up\");\n    };\n  }, []);\n\n  const handelCalculation = () => {\n    let data = 0;\n\n    for (let i = 0; i < mystate.editList.length; i++) {\n      data += mystate.editList[i].total;\n    }\n\n    setSubTotal(data);\n\n    console.log(\"Sub: \", subTotal, \"Tax:\", tax, \"total\", totalAmount);\n  };\n\n  return (\n    <div>\n   <button onClick={()=>console.log(mystate.editList)}>clkic</button>\n    </div>\n  );\n}\n\nexport default EditInvoice;\n"]},"metadata":{},"sourceType":"module"}