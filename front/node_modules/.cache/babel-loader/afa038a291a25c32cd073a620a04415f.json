{"ast":null,"code":"const defualtState = {\n  editList: []\n};\n\nconst editList = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defualtState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case \"add\":\n      return {\n        editList: [...state.editList, payload]\n      };\n\n    case \"edit\":\n      const newArray = [...state.editList]; //making a new array\n\n      if (payload[2] === 1) newArray[payload[0]].name = payload[1];\n      if (payload[2] === 2 && payload[1] >= 0) newArray[payload[0]].quntity = payload[1];\n      if (payload[2] === 3 && payload[1] >= 0) newArray[payload[0]].price = payload[1];\n      newArray[payload[0]].total = newArray[payload[0]].quntity * newArray[payload[0]].price; //changing value in the new array\n\n      return {\n        editList: newArray\n      };\n\n    case \"remove\":\n      const tempArr = [...state.editList]; //making a new array\n\n      const data = tempArr.filter(e => e.id !== payload);\n\n      for (let i = 0; i < data.length; i++) {\n        if (payload < data[i].id) data[i].id = data[i].id - 1;\n      }\n\n      return {\n        editList: data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default editList;\nexport const changeState = payload => {\n  return {\n    type: \"add\",\n    payload: payload\n  };\n};\nexport const edit = payload => {\n  return {\n    type: \"edit\",\n    payload: payload\n  };\n};\nexport const remove = payload => {\n  return {\n    type: \"remove\",\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/front/src/reducers/editReducer.js"],"names":["defualtState","editList","state","type","payload","newArray","name","quntity","price","total","tempArr","data","filter","e","id","i","length","changeState","edit","remove"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;;AAIE,MAAMA,QAAQ,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCF,YAAoC;AAAA,MAAtB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAE5D,UAAQD,IAAR;AAEE,SAAK,KAAL;AACE,aAAO;AAAEF,QAAAA,QAAQ,EAAC,CAAC,GAAGC,KAAK,CAACD,QAAV,EAAoBG,OAApB;AAAX,OAAP;;AAEF,SAAK,MAAL;AACE,YAAMC,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAACD,QAAV,CAAjB,CADF,CACwC;;AAEtC,UAAIG,OAAO,CAAC,CAAD,CAAP,KAAe,CAAnB,EAAsBC,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBE,IAArB,GAA4BF,OAAO,CAAC,CAAD,CAAnC;AACtB,UAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,CAAf,IAAoBA,OAAO,CAAC,CAAD,CAAP,IAAc,CAAtC,EACEC,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBG,OAArB,GAA+BH,OAAO,CAAC,CAAD,CAAtC;AACF,UAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,CAAf,IAAoBA,OAAO,CAAC,CAAD,CAAP,IAAc,CAAtC,EACEC,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBI,KAArB,GAA6BJ,OAAO,CAAC,CAAD,CAApC;AAEFC,MAAAA,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBK,KAArB,GACAJ,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBG,OAArB,GAA+BF,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBI,KADpD,CATF,CAYE;;AACA,aAAO;AACLP,QAAAA,QAAQ,EAAEI;AADL,OAAP;;AAGF,SAAK,QAAL;AACE,YAAMK,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACD,QAAV,CAAhB,CADF,CACuC;;AACrC,YAAMU,IAAI,GAAGD,OAAO,CAACE,MAAR,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASV,OAA/B,CAAb;;AACD,WAAI,IAAIW,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACK,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC7B,YAAGX,OAAO,GAAEO,IAAI,CAACI,CAAD,CAAJ,CAAQD,EAApB,EACAH,IAAI,CAACI,CAAD,CAAJ,CAAQD,EAAR,GAAYH,IAAI,CAACI,CAAD,CAAJ,CAAQD,EAAR,GAAY,CAAxB;AACA;;AAGA,aAAO;AAAEb,QAAAA,QAAQ,EAAGU;AAAb,OAAP;;AAEF;AACE,aAAOT,KAAP;AAjCJ;AAmCD,CArCD;;AAuCA,eAAeD,QAAf;AAGA,OAAO,MAAMgB,WAAW,GAAIb,OAAD,IAAa;AACtC,SAAO;AACLD,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,IAAI,GAAId,OAAD,IAAa;AAC/B,SAAO;AACLD,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMe,MAAM,GAAIf,OAAD,IAAa;AACjC,SAAO;AACLD,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM","sourcesContent":["const defualtState = {\n    editList: [],\n  };\n  \n  const editList = (state = defualtState, { type, payload }) => {\n  \n    switch (type) {\n  \n      case \"add\":\n        return { editList:[...state.editList, payload] };\n        \n      case \"edit\":\n        const newArray = [...state.editList]; //making a new array\n  \n        if (payload[2] === 1) newArray[payload[0]].name = payload[1];\n        if (payload[2] === 2 && payload[1] >= 0)\n          newArray[payload[0]].quntity = payload[1];\n        if (payload[2] === 3 && payload[1] >= 0)\n          newArray[payload[0]].price = payload[1];\n  \n        newArray[payload[0]].total =\n        newArray[payload[0]].quntity * newArray[payload[0]].price;\n  \n        //changing value in the new array\n        return {\n          editList: newArray,\n        };\n      case \"remove\":\n        const tempArr = [...state.editList]; //making a new array\n        const data = tempArr.filter((e) => e.id !== payload)\n       for(let i=0;i<data.length;i++){\n        if(payload< data[i].id)\n        data[i].id= data[i].id -1\n       }\n      \n  \n        return { editList:  data    };\n  \n      default:\n        return state;\n    }\n  };\n  \n  export default editList;\n  \n  \n  export const changeState = (payload) => {\n    return {\n      type: \"add\",\n      payload: payload,\n    };\n  };\n  \n  export const edit = (payload) => {\n    return {\n      type: \"edit\",\n      payload: payload,\n    };\n  };\n  export const remove = (payload) => {\n    return {\n      type: \"remove\",\n      payload: payload,\n    };\n  };\n  "]},"metadata":{},"sourceType":"module"}