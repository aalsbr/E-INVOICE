{"ast":null,"code":"const defualtState = {\n  btnSave: []\n};\n\nconst btnSave = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defualtState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case \"add\":\n      return {\n        btnSave: [...state.btnSave, payload]\n      };\n\n    case \"edit\":\n      const newArray = [...state.btnSave]; //making a new array\n\n      if (payload[2] === 1) newArray[payload[0]].name = payload[1];\n      if (payload[2] === 2 && payload[1] >= 0) newArray[payload[0]].quntity = payload[1];\n      if (payload[2] === 3 && payload[1] >= 0) newArray[payload[0]].price = payload[1];\n      newArray[payload[0]].total = newArray[payload[0]].quntity * newArray[payload[0]].price; //changing value in the new array\n\n      return {\n        btnSave: newArray\n      };\n\n    case \"remove\":\n      return {\n        btnSave: state.btnSave.filter(e => e.id !== payload.id).reduce((a, b) => {})\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default btnSave;\nexport const changeState = payload => {\n  return {\n    type: \"add\",\n    payload: payload\n  };\n};\nexport const edit = payload => {\n  return {\n    type: \"edit\",\n    payload: payload\n  };\n};\nexport const remove = payload => {\n  return {\n    type: \"remove\",\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/front/src/reducers/btnReducer.js"],"names":["defualtState","btnSave","state","type","payload","newArray","name","quntity","price","total","filter","e","id","reduce","a","b","changeState","edit","remove"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMA,OAAO,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCF,YAAoC;AAAA,MAAtB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAE3D,UAAQD,IAAR;AAEE,SAAK,KAAL;AACE,aAAO;AAAEF,QAAAA,OAAO,EAAC,CAAC,GAAGC,KAAK,CAACD,OAAV,EAAmBG,OAAnB;AAAV,OAAP;;AAEF,SAAK,MAAL;AACE,YAAMC,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAACD,OAAV,CAAjB,CADF,CACuC;;AAErC,UAAIG,OAAO,CAAC,CAAD,CAAP,KAAe,CAAnB,EAAsBC,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBE,IAArB,GAA4BF,OAAO,CAAC,CAAD,CAAnC;AACtB,UAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,CAAf,IAAoBA,OAAO,CAAC,CAAD,CAAP,IAAc,CAAtC,EACEC,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBG,OAArB,GAA+BH,OAAO,CAAC,CAAD,CAAtC;AACF,UAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,CAAf,IAAoBA,OAAO,CAAC,CAAD,CAAP,IAAc,CAAtC,EACEC,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBI,KAArB,GAA6BJ,OAAO,CAAC,CAAD,CAApC;AAEFC,MAAAA,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBK,KAArB,GACEJ,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBG,OAArB,GAA+BF,QAAQ,CAACD,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBI,KADtD,CATF,CAYE;;AACA,aAAO;AACLP,QAAAA,OAAO,EAAEI;AADJ,OAAP;;AAGF,SAAK,QAAL;AACE,aAAO;AAAEJ,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcS,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,OAAO,CAACQ,EAA7C,EAAiDC,MAAjD,CAAwD,CAACC,CAAD,EAAGC,CAAH,KAAO,CAAE,CAAjE;AAAX,OAAP;;AAEF;AACE,aAAOb,KAAP;AAzBJ;AA2BD,CA7BD;;AA+BA,eAAeD,OAAf;AAGA,OAAO,MAAMe,WAAW,GAAIZ,OAAD,IAAa;AACtC,SAAO;AACLD,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMa,IAAI,GAAIb,OAAD,IAAa;AAC/B,SAAO;AACLD,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMc,MAAM,GAAId,OAAD,IAAa;AACjC,SAAO;AACLD,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM","sourcesContent":["const defualtState = {\n  btnSave: [],\n};\n\nconst btnSave = (state = defualtState, { type, payload }) => {\n\n  switch (type) {\n\n    case \"add\":\n      return { btnSave:[...state.btnSave, payload] };\n      \n    case \"edit\":\n      const newArray = [...state.btnSave]; //making a new array\n\n      if (payload[2] === 1) newArray[payload[0]].name = payload[1];\n      if (payload[2] === 2 && payload[1] >= 0)\n        newArray[payload[0]].quntity = payload[1];\n      if (payload[2] === 3 && payload[1] >= 0)\n        newArray[payload[0]].price = payload[1];\n\n      newArray[payload[0]].total =\n        newArray[payload[0]].quntity * newArray[payload[0]].price;\n\n      //changing value in the new array\n      return {\n        btnSave: newArray,\n      };\n    case \"remove\":\n      return { btnSave: state.btnSave.filter((e) => e.id !== payload.id).reduce((a,b)=>{}) };\n\n    default:\n      return state;\n  }\n};\n\nexport default btnSave;\n\n\nexport const changeState = (payload) => {\n  return {\n    type: \"add\",\n    payload: payload,\n  };\n};\n\nexport const edit = (payload) => {\n  return {\n    type: \"edit\",\n    payload: payload,\n  };\n};\nexport const remove = (payload) => {\n  return {\n    type: \"remove\",\n    payload: payload,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}