{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pdfest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { usePDF, Document, Page } from '@react-pdf/renderer';\nimport MyDocument from \"./document\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [instance, updateInstance] = usePDF({\n    document: MyDocument\n  });\n  if (instance.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 32\n  }, this);\n  if (instance.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong:  \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(instance.url)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: instance.url,\n      download: \"test.pdf\",\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s9InAQz4cPeHNo8Zjv79972yv5c=\", false, function () {\n  return [usePDF];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/src/App.js"],"names":["usePDF","Document","Page","MyDocument","App","instance","updateInstance","document","loading","error","console","log","url"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,qBAAvC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BN,MAAM,CAAC;AAAEO,IAAAA,QAAQ,EAAEJ;AAAZ,GAAD,CAAzC;AACA,MAAIE,QAAQ,CAACG,OAAb,EAAsB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEtB,MAAIH,QAAQ,CAACI,KAAb,EAAoB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACpB,sBAEE;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAE,MAAIC,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,GAArB;AAArB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAG,MAAA,IAAI,EAAEP,QAAQ,CAACO,GAAlB;AAAuB,MAAA,QAAQ,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD;;GAfQR,G;UAC4BJ,M;;;KAD5BI,G;AAiBT,eAAeA,GAAf","sourcesContent":["import { usePDF, Document, Page } from '@react-pdf/renderer';\nimport MyDocument from \"./document\";\n\n\nfunction App() {\n  const [instance, updateInstance] = usePDF({ document: MyDocument });\n  if (instance.loading) return <div>Loading ...</div>;\n\n  if (instance.error) return <div>Something went wrong:  </div>;\n  return (\n  \n    <div>\n    <button onClick={()=>console.log(instance.url)}></button>\n    <a href={instance.url} download=\"test.pdf\">\n    Download\n    </a>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}