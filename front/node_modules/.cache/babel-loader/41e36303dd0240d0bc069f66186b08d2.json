{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pdfest/src/document.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\ndata;\nimport { Document, Page, Text, View } from \"@react-pdf/renderer\";\nimport { data } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyDocument(_ref) {\n  _s();\n\n  let {\n    test\n  } = _ref;\n  //input field for products\n  const [productName, setproductName] = useState(data.name);\n  const [productPrice, setproductPrice] = useState(\"\");\n  const [productQuntity, setproductQuntity] = useState(\"\");\n  const [productTotal, setproductTotal] = useState(\"\");\n  useEffect(() => {\n    console.log(\"VALUE OF \", test);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: {\n        backgroundColor: \"white\",\n        marginTop: 50,\n        paddingRight: 50,\n        paddingLeft: 50,\n        height: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: 100\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Client Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"#InoviceNo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Invoice Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row-reverse\",\n          justifyContent: \"space-around\",\n          backgroundColor: \"grey\",\n          marginTop: 20,\n          marginBottom: 10\n        },\n        children: [test ? /*#__PURE__*/_jsxDEV(Text, {\n          children: productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          value: data.name,\n          type: \"text\",\n          onChange: e => setproductName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Quntity \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          marginRight: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), test ? /*#__PURE__*/_jsxDEV(\"input\", {\n          value: productName,\n          type: \"text\",\n          onChange: e => setproductName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Text, {\n          children: productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginRight: 100,\n          paddingTop: 50\n        },\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"inline\"\n            },\n            children: \"Sub Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"inline\"\n            },\n            children: \"3500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"inline\"\n            },\n            children: \"VAT(15%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"inline\"\n            },\n            children: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"inline\"\n            },\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"inline\"\n            },\n            children: \"4000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MyDocument, \"dLzfQ+y8M3Jp4w7K5QmdHu7mODs=\");\n\n_c = MyDocument;\nexport default MyDocument;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDocument\");","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/src/document.js"],"names":["React","useEffect","useState","data","Document","Page","Text","View","MyDocument","test","productName","setproductName","name","productPrice","setproductPrice","productQuntity","setproductQuntity","productTotal","setproductTotal","console","log","backgroundColor","marginTop","paddingRight","paddingLeft","height","display","flexDirection","gap","alignItems","justifyContent","marginBottom","e","target","value","marginRight","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACAC,IAAI;AACJ,SACEC,QADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,QAKO,qBALP;AAMA,SAASJ,IAAT,QAAqB,QAArB;;;AAEA,SAASK,UAAT,OAA8B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAE5B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACC,IAAI,CAACS,IAAN,CAA9C;AACE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AACF,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAEFD,EAAAA,SAAS,CAAC,MAAI;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBX,IAAxB;AACC,GAFQ,EAEP,EAFO,CAAT;AAIE,sBACI,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,KAAK,EAAE;AACLY,QAAAA,eAAe,EAAE,OADZ;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,YAAY,EAAE,EAHT;AAILC,QAAAA,WAAW,EAAE,EAJR;AAMLC,QAAAA,MAAM,EAAE;AANH,OAFT;AAAA,8BAWE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE,KAAlC;AAAyCC,UAAAA,GAAG,EAAE;AAA9C,SAAb;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLF,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,QAFV;AAGLE,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA,gCAOE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA0BE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,KAFV;AAGLG,UAAAA,cAAc,EAAE;AAHX,SADT;AAAA,gCAOE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAeE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eA6CE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,aAFV;AAGLG,UAAAA,cAAc,EAAE,cAHX;AAILT,UAAAA,eAAe,EAAE,MAJZ;AAKLC,UAAAA,SAAS,EAAE,EALN;AAMLS,UAAAA,YAAY,EAAE;AANT,SADT;AAAA,mBAUGtB,IAAI,gBACH,QAAC,IAAD;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADG,gBAGH;AACE,UAAA,KAAK,EAAEP,IAAI,CAACS,IADd;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAGoB,CAAD,IAAOrB,cAAc,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAmBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eAqBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,eAqEE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLR,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,KAFV;AAGLG,UAAAA,cAAc,EAAE,cAHX;AAILK,UAAAA,WAAW,EAAE;AAJR,SADT;AAAA,gCAQE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASG1B,IAAI,gBACH;AACE,UAAA,KAAK,EAAEC,WADT;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAGsB,CAAD,IAAOrB,cAAc,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,gBADG,gBAOH,QAAC,IAAD;AAAA,oBAAOxB;AAAP;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArEF,eAwFE;AAAA;AAAA;AAAA;AAAA,cAxFF,eA0FE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLgB,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,QAFV;AAGLQ,UAAAA,WAAW,EAAE,GAHR;AAILC,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA,gCAQE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEV,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAkBE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAuHD;;GAnIQlB,U;;KAAAA,U;AAqIT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\ndata\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n} from \"@react-pdf/renderer\";\nimport { data } from \"./data\";\n\nfunction MyDocument({ test }) {\n\n  //input field for products\n  const [productName, setproductName] = useState(data.name);\n    const [productPrice, setproductPrice] = useState(\"\");\n    const [productQuntity, setproductQuntity] = useState(\"\");\n  const [productTotal, setproductTotal] = useState(\"\");\n\nuseEffect(()=>{\nconsole.log(\"VALUE OF \",test)\n},[])\n\n  return (\n      <Document>\n        <Page\n          size=\"A4\"\n          style={{\n            backgroundColor: \"white\",\n            marginTop: 50,\n            paddingRight: 50,\n            paddingLeft: 50,\n\n            height: 500,\n          }}\n        >\n          <View style={{ display: \"flex\", flexDirection: \"row\", gap: 100 }}>\n            <Text>Invoice</Text>\n          </View>\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <Text>Company Name</Text>\n            <Text>Phone Number</Text>\n            <Text>Adress</Text>\n          </View>\n\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              <Text>Client Information:</Text>\n            </View>\n\n            <View>\n              <Text>#InoviceNo</Text>\n            </View>\n\n            <View>\n              <Text>Invoice Date</Text>\n            </View>\n          </View>\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"row-reverse\",\n              justifyContent: \"space-around\",\n              backgroundColor: \"grey\",\n              marginTop: 20,\n              marginBottom: 10,\n            }}\n          >\n            {test ? (\n              <Text>{productName}</Text>\n            ) : (\n              <input\n                value={data.name}\n                type=\"text\"\n                onChange={(e) => setproductName(e.target.value)}\n              />\n            )}\n            <Text>Quntity </Text>\n            <Text>Price</Text>\n            <Text>Total</Text>\n          </View>\n\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n              marginRight: 100,\n            }}\n          >\n            <Text>200</Text>\n            {test ? (\n              <input\n                value={productName}\n                type=\"text\"\n                onChange={(e) => setproductName(e.target.value)}\n              />\n              ) : (\n              <Text>{productName}</Text>\n            )}\n          </View>\n          <hr />\n\n          <View\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              marginRight: 100,\n              paddingTop: 50,\n            }}\n          >\n            <View>\n              <Text style={{ display: \"inline\" }}>Sub Total</Text>\n              <Text style={{ display: \"inline\" }}>3500</Text>\n            </View>\n\n            <View>\n              <Text style={{ display: \"inline\" }}>VAT(15%)</Text>\n              <Text style={{ display: \"inline\" }}>500</Text>\n            </View>\n\n            <View>\n              <Text style={{ display: \"inline\" }}>Total</Text>\n              <Text style={{ display: \"inline\" }}>4000</Text>\n            </View>\n           \n          </View>\n        </Page>\n      </Document>\n  );\n}\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}