{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/pdfest/src/invoiceRoot.js\",\n    _s = $RefreshSig$();\n\nimport { usePDF } from \"@react-pdf/renderer\";\nimport React, { useEffect, useState } from \"react\";\nimport MyDocument from \"./document\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InvoiceRoot(_ref) {\n  _s();\n\n  let {\n    test\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const [instance, update] = usePDF({\n    document: /*#__PURE__*/_jsxDEV(MyDocument, {\n      test: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 49\n    }, this)\n  });\n\n  const handelClick = () => {\n    window.open(instance.url, '_blank');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      justifyContent: \"center\",\n      backgroundColor: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n      document: /*#__PURE__*/_jsxDEV(MyDocument, {\n        test: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }, this),\n      fileName: \"somename.pdf\",\n      children: _ref2 => {\n        let {\n          blob,\n          url,\n          loading,\n          error\n        } = _ref2;\n        return loading ? 'Loading document...' : 'Download now!';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InvoiceRoot, \"XRBJMAdi7TzYVD7YCL/B+x83dRU=\", false, function () {\n  return [usePDF];\n});\n\n_c = InvoiceRoot;\nexport default InvoiceRoot;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceRoot\");","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/src/invoiceRoot.js"],"names":["usePDF","React","useEffect","useState","MyDocument","InvoiceRoot","test","value","setValue","instance","update","document","handelClick","window","open","url","display","justifyContent","backgroundColor","e","target","blob","loading","error"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACM,QAAD,EAAWC,MAAX,IAAqBV,MAAM,CAAC;AAACW,IAAAA,QAAQ,eAAC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAV,GAAD,CAAjC;;AAEA,QAAMK,WAAW,GAAI,MAAO;AACxBC,IAAAA,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAACM,GAArB,EAA0B,QAA1B;AACD,GAFH;;AAMF,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KADT;AAAA,4BAQC;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAEX,KAA3B;AAAkC,MAAA,QAAQ,EAAGY,CAAD,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASb,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA,YARD,eASC,QAAC,eAAD;AAAiB,MAAA,QAAQ,eAAE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAA3B;AAAwD,MAAA,QAAQ,EAAC,cAAjE;AAAA,gBACC;AAAA,YAAC;AAAEc,UAAAA,IAAF;AAAQN,UAAAA,GAAR;AAAaO,UAAAA,OAAb;AAAsBC,UAAAA;AAAtB,SAAD;AAAA,eACCD,OAAO,GAAG,qBAAH,GAA2B,eADnC;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9BQjB,W;UAEsBL,M;;;KAFtBK,W;AAgCT,eAAeA,WAAf","sourcesContent":["import { usePDF } from \"@react-pdf/renderer\";\nimport React, { useEffect, useState } from \"react\";\nimport MyDocument from \"./document\";\n\nfunction InvoiceRoot({ test }) {\n    const [value,setValue] = useState(\"\")\n    const [instance, update] = usePDF({document:<MyDocument test={value} />} )\n\n    const handelClick =  ()  => {\n        window.open(instance.url, '_blank')\n      };\n\n\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        justifyContent: \"center\",\n        backgroundColor: \"white\",\n      }}\n    >\n\n     <input  type=\"text\" value={value} onChange={(e)=>setValue(e.target.value)} />\n     <PDFDownloadLink document={<MyDocument test={value} />} fileName=\"somename.pdf\">\n     {({ blob, url, loading, error }) =>\n       loading ? 'Loading document...' : 'Download now!'\n     }\n   </PDFDownloadLink>\n         \n  \n    \n    </div>\n  );\n}\n\nexport default InvoiceRoot;\n"]},"metadata":{},"sourceType":"module"}