{"ast":null,"code":"const defualtState = {\n  btnSave: []\n};\n\nconst btnSave = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defualtState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case \"Show\":\n      return {\n        List: payload\n      };\n\n    case \"add\":\n      return {\n        btnSave: [...state.btnSave, payload]\n      };\n\n    case \"edit\":\n      const newArray = [...state.btnSave]; //making a new array\n\n      if (payload[2] == 1) newArray[payload[0]].name = payload[1];\n      if (payload[2] == 2) newArray[payload[0]].quntity = payload[1];\n      newArray[payload[0]].total = newArray[payload[0]].price * payload[1];\n      if (payload[2] == 3) newArray[payload[0]].price = payload[1];\n      newArray[payload[0]].total = newArray[payload[0]].price * payload[1]; //changing value in the new array\n\n      return {\n        btnSave: newArray\n      };\n\n    case \"remove\":\n      return {\n        btnSave: state.btnSave.filter(e => e.id !== payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default btnSave;\nexport const changeState = payload => {\n  return {\n    type: \"add\",\n    payload: payload\n  };\n};\nexport const show = payload => {\n  return {\n    type: \"Show\",\n    payload: payload\n  };\n};\nexport const edit = payload => {\n  return {\n    type: \"edit\",\n    payload: payload\n  };\n};\nexport const remove = payload => {\n  return {\n    type: \"remove\",\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/pdfest/src/reducers/btnReducer.js"],"names":["defualtState","btnSave","state","type","payload","List","newArray","name","quntity","total","price","filter","e","id","changeState","show","edit","remove"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMA,OAAO,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCF,YAAoC;AAAA,MAAtB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC3D,UAAQD,IAAR;AACE,SAAK,MAAL;AACE,aAAO;AAAEE,QAAAA,IAAI,EAAED;AAAR,OAAP;;AAEF,SAAK,KAAL;AACE,aAAO;AAAEH,QAAAA,OAAO,EAAE,CAAC,GAAGC,KAAK,CAACD,OAAV,EAAkBG,OAAlB;AAAX,OAAP;;AACF,SAAK,MAAL;AACE,YAAME,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACD,OAAV,CAAjB,CADF,CACuC;;AACrC,UAAGG,OAAO,CAAC,CAAD,CAAP,IAAY,CAAf,EACAE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBG,IAArB,GAA4BH,OAAO,CAAC,CAAD,CAAnC;AACA,UAAGA,OAAO,CAAC,CAAD,CAAP,IAAY,CAAf,EACAE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBI,OAArB,GAA+BJ,OAAO,CAAC,CAAD,CAAtC;AACAE,MAAAA,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBK,KAArB,GAA8BH,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBM,KAArB,GAA2BN,OAAO,CAAC,CAAD,CAAhE;AACA,UAAGA,OAAO,CAAC,CAAD,CAAP,IAAY,CAAf,EACAE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBM,KAArB,GAA6BN,OAAO,CAAC,CAAD,CAApC;AACAE,MAAAA,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBK,KAArB,GAA8BH,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,CAAqBM,KAArB,GAA2BN,OAAO,CAAC,CAAD,CAAhE,CATF,CAWE;;AACA,aAAO;AACLH,QAAAA,OAAO,EAAEK;AADJ,OAAP;;AAGA,SAAK,QAAL;AACE,aAAO;AAAEL,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcU,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAAST,OAAO,CAACS,EAA7C;AAAX,OAAP;;AAEJ;AACE,aAAOX,KAAP;AAzBJ;AA2BD,CA5BD;;AA6BA,eAAeD,OAAf;AAEA,OAAO,MAAMa,WAAW,GAAIV,OAAD,IAAa;AACtC,SAAO;AACLD,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMW,IAAI,GAAIX,OAAD,IAAa;AAC/B,SAAO;AACLD,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMY,IAAI,GAAIZ,OAAD,IAAa;AAC/B,SAAO;AACLD,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMa,MAAM,GAAIb,OAAD,IAAa;AACjC,SAAO;AACLD,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM","sourcesContent":["const defualtState = {\n  btnSave: [],\n};\n\nconst btnSave = (state = defualtState, { type, payload }) => {\n  switch (type) {\n    case \"Show\":\n      return { List: payload };\n\n    case \"add\":\n      return { btnSave: [...state.btnSave,payload ] };\n    case \"edit\":\n      const newArray = [...state.btnSave]; //making a new array\n      if(payload[2]==1)\n      newArray[payload[0]].name = payload[1]\n      if(payload[2]==2)\n      newArray[payload[0]].quntity = payload[1]\n      newArray[payload[0]].total =  newArray[payload[0]].price*payload[1]\n      if(payload[2]==3)\n      newArray[payload[0]].price = payload[1]\n      newArray[payload[0]].total =  newArray[payload[0]].price*payload[1]\n      \n      //changing value in the new array\n      return {\n        btnSave: newArray, \n      };\n      case \"remove\":\n        return { btnSave: state.btnSave.filter((e) => e.id !== payload.id) };\n\n    default:\n      return state;\n  }\n};\nexport default btnSave;\n\nexport const changeState = (payload) => {\n  return {\n    type: \"add\",\n    payload: payload,\n  };\n};\nexport const show = (payload) => {\n  return {\n    type: \"Show\",\n    payload: payload,\n  };\n};\nexport const edit = (payload) => {\n  return {\n    type: \"edit\",\n    payload: payload,\n  };\n};\nexport const remove = (payload) => {\n  return {\n    type: \"remove\",\n    payload: payload,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}